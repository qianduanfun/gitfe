(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{473:function(t,a,s){"use strict";s.r(a);var e=s(48),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"提交代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交代码"}},[t._v("#")]),t._v(" 提交代码")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git add . //添加所有文件\n\ngit commit -m "本功能全部完成"\n')])])]),s("h4",{attrs:{id:"撤回commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤回commit"}},[t._v("#")]),t._v(" 撤回commit")]),t._v(" "),s("blockquote",[s("p",[t._v("注意，仅仅是撤回commit操作，您写的代码仍然保留。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git reset --soft HEAD^\n")])])]),s("blockquote",[s("p",[t._v("HEAD^的意思是上一个版本，也可以写成HEAD~1\n如果你进行了2次commit，想都撤回，可以使用HEAD~2")])]),t._v(" "),s("h2",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数：")]),t._v(" "),s("p",[s("strong",[t._v("--mixed")])]),t._v(" "),s("ul",[s("li",[t._v("不删除工作空间改动代码，撤销commit，并且撤销git add . 操作")]),t._v(" "),s("li",[t._v("这个为默认参数 git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的。")])]),t._v(" "),s("p",[s("strong",[t._v("--soft")])]),t._v(" "),s("ul",[s("li",[t._v("不删除工作空间改动代码，撤销commit，不撤销git add .")])]),t._v(" "),s("p",[s("strong",[t._v("--hard")])]),t._v(" "),s("ul",[s("li",[t._v("删除工作空间改动代码，撤销commit，撤销git add .")]),t._v(" "),s("li",[t._v("注意完成这个操作后，就恢复到了上一次的commit状态。")])]),t._v(" "),s("p",[t._v("如果commit注释写错了，只是想改一下注释，执行：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git commit --amend\n")])])]),s("p",[t._v("进入默认vim编辑器，修改注释完毕后保存（wq!）")])])}),[],!1,null,null,null);a.default=i.exports}}]);
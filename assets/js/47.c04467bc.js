(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{446:function(e,t,a){"use strict";a.r(t);var s=a(48),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"from"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[e._v("#")]),e._v(" FROM")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("FROM <image> [AS <name>]\n")])])]),a("p",[e._v("Or")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("FROM <image>[:<tag>] [AS <name>]\n")])])]),a("p",[e._v("Or")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("FROM <image>[@<digest>] [AS <name>]\n")])])]),a("p",[e._v("The "),a("code",[e._v("FROM")]),e._v(" instruction initializes a new build stage and sets the\n"),a("RouterLink",{attrs:{to:"/docs/docker/Dockerfile-reference/glossary.html#base-image"}},[a("em",[e._v("Base Image")])]),e._v(" for subsequent instructions. As such, a\nvalid "),a("code",[e._v("Dockerfile")]),e._v(" must start with a "),a("code",[e._v("FROM")]),e._v(" instruction. The image can be\nany valid image â€“ it is especially easy to start by "),a("strong",[e._v("pulling an image")]),e._v(" from\nthe "),a("a",{attrs:{href:"https://docs.docker.com/engine/tutorials/dockerrepos/",target:"_blank",rel:"noopener noreferrer"}},[a("em",[e._v("Public Repositories")]),a("OutboundLink")],1),e._v(".")],1),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("ARG")]),e._v(" is the only instruction that may precede "),a("code",[e._v("FROM")]),e._v(" in the "),a("code",[e._v("Dockerfile")]),e._v(".\nSee "),a("a",{attrs:{href:"#understand-how-arg-and-from-interact"}},[e._v("Understand how ARG and FROM interact")]),e._v(".")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("FROM")]),e._v(" can appear multiple times within a single "),a("code",[e._v("Dockerfile")]),e._v(" to\ncreate multiple images or use one build stage as a dependency for another.\nSimply make a note of the last image ID output by the commit before each new\n"),a("code",[e._v("FROM")]),e._v(" instruction. Each "),a("code",[e._v("FROM")]),e._v(" instruction clears any state created by previous\ninstructions.")])]),e._v(" "),a("li",[a("p",[e._v("Optionally a name can be given to a new build stage by adding "),a("code",[e._v("AS name")]),e._v(" to the\n"),a("code",[e._v("FROM")]),e._v(" instruction. The name can be used in subsequent "),a("code",[e._v("FROM")]),e._v(" and\n"),a("code",[e._v("COPY --from=<name|index>")]),e._v(" instructions to refer to the image built in this stage.")])]),e._v(" "),a("li",[a("p",[e._v("The "),a("code",[e._v("tag")]),e._v(" or "),a("code",[e._v("digest")]),e._v(" values are optional. If you omit either of them, the\nbuilder assumes a "),a("code",[e._v("latest")]),e._v(" tag by default. The builder returns an error if it\ncannot find the "),a("code",[e._v("tag")]),e._v(" value.")])])]),e._v(" "),a("h3",{attrs:{id:"understand-how-arg-and-from-interact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#understand-how-arg-and-from-interact"}},[e._v("#")]),e._v(" Understand how ARG and FROM interact")]),e._v(" "),a("p",[a("code",[e._v("FROM")]),e._v(" instructions support variables that are declared by any "),a("code",[e._v("ARG")]),e._v("\ninstructions that occur before the first "),a("code",[e._v("FROM")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-Dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v("  CODE_VERSION=latest\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("CODE_VERSION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CMD")]),e._v("  /code/run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("app\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" extras"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("CODE_VERSION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CMD")]),e._v("  /code/run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("extras\n")])])]),a("p",[e._v("An "),a("code",[e._v("ARG")]),e._v(" declared before a "),a("code",[e._v("FROM")]),e._v(" is outside of a build stage, so it\ncan't be used in any instruction after a "),a("code",[e._v("FROM")]),e._v(". To use the default value of\nan "),a("code",[e._v("ARG")]),e._v(" declared before the first "),a("code",[e._v("FROM")]),e._v(" use an "),a("code",[e._v("ARG")]),e._v(" instruction without\na value inside of a build stage:")]),e._v(" "),a("div",{staticClass:"language-Dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" VERSION=latest\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" busybox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("$VERSION\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ARG")]),e._v(" VERSION\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("RUN")]),e._v(" echo $VERSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v(" image_version\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{423:function(t,e,i){"use strict";i.r(e);var a=i(48),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),i("blockquote",[i("p",[t._v("Git是目前世界上最先进的分布式版本控制系统")])]),t._v(" "),i("p",[t._v("本篇文章将重点讲解大多数人忽略或者不清楚的点，注意: 这不是一篇大而全的git使用教程, 只会重点讲解一些关键知识点，如果你需要更全的git教程，你应该去查看"),i("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),i("OutboundLink")],1)]),t._v(" "),i("h2",{attrs:{id:"关联本地仓库与远程仓库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#关联本地仓库与远程仓库"}},[t._v("#")]),t._v(" 关联本地仓库与远程仓库")]),t._v(" "),i("p",[t._v("大多数人都会使用"),i("code",[t._v("git clone")]),t._v("命令来将github上的代码仓库克隆到本地，然后做一些修改后就可以使用"),i("code",[t._v("git push")]),t._v("等命令来提交修改，但是这导致的问题就是大多数人对本地仓库和远程仓库是如何关联起来的不清楚，同时也不清楚有时候用到的"),i("code",[t._v("origin")]),t._v("这个究竟代表什么意思。下面我们从零来讲解如何将本地仓库和远程仓库关联。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v('$ mkdir studyGit // 创建目录\n$ cd studyGit // 进入该目录\n$ g init // 初始化本地git仓库配置文件\n// 这是最关键的命令，这里我们给本地的git仓库添加了一个名为origin，地址为git@github.com:ykfe/fe-dev-playbook.git的远程仓库\n$ g remote add origin git@github.com:ykfe/fe-dev-playbook.git \n$ ga .\n$ gcmsg "feat: init files" // 在这里我们做一些修改然后commit生成一个本地的版本\n$ g push origin master // 将本地仓库的修改推送到远程origin 仓库的master分支\n')])])]),i("p",[t._v("通过以上代码我们可以知道，"),i("code",[t._v("origin")]),t._v("代表的是远程仓库的名称，这里的"),i("code",[t._v("origin")]),t._v("我们可以在"),i("code",[t._v("git remote")]),t._v(" 的时候自定义名称，不一定要叫"),i("code",[t._v("origin")]),t._v("只是官方的规范对"),i("code",[t._v("clone")]),t._v("下来的远程仓库默认叫做"),i("code",[t._v("origin")]),t._v("。"),i("br"),t._v("\n看到这里，你可以知道我们完全可以通过"),i("code",[t._v("git remote")]),t._v("添加多个远程仓库来实现同时将代码推送到"),i("code",[t._v("github/gitlab/gitoschina")]),t._v("多个远程仓库")]),t._v(" "),i("h2",{attrs:{id:"git-add-commit-与-git-commit-am-的区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-add-commit-与-git-commit-am-的区别"}},[t._v("#")]),t._v(" git add + commit 与 git commit -am 的区别")]),t._v(" "),i("p",[t._v("大多数人喜欢用后面的一种方式来添加提交本地代码到本地仓库中，但后一种与前一种方式并不是完全相等的。"),i("br"),t._v("\n熟悉Git的同学知道，我们在项目中新建一个新文件后，它的状态是"),i("code",[t._v("untracked")]),t._v("的，当我们使用"),i("code",[t._v("git add .")]),t._v(" 将其添加到暂存区时，它的状态就会变为"),i("code",[t._v("tracked")]),t._v("，即可追踪的。当我们用"),i("code",[t._v("git commit")]),t._v("的时候会将暂存区的文件提交到本地仓库生成一个commit记录。"),i("br"),t._v(" "),i("code",[t._v("git commit -am")]),t._v(" 只会将"),i("code",[t._v("tracked")]),t._v("状态的文件commit到本地仓库，意思是如果你有新的文件产生，并且之前没有用"),i("code",[t._v("git add")]),t._v(" 将其状态变为"),i("code",[t._v("tracked")]),t._v("，使用 "),i("code",[t._v("git commit -am")]),t._v(" 并不能将该文件commit到本地仓库，容易造成文件的丢失。")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://gw.alicdn.com/tfs/TB1c5RSXKL2gK0jSZPhXXahvXXa-1436-1152.jpg",alt:""}})]),t._v(" "),i("h2",{attrs:{id:"多人合作开发"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#多人合作开发"}},[t._v("#")]),t._v(" 多人合作开发")]),t._v(" "),i("p",[t._v("如果要开发多人合作项目，我们建议将master分支设置为"),i("a",{attrs:{href:"https://help.github.com/en/articles/configuring-protected-branches",target:"_blank",rel:"noopener noreferrer"}},[t._v("protected"),i("OutboundLink")],1),t._v("分支，使得不允许直接在master上提交代码，只能通过PR的形式来合并。如何向项目提交PR请参考"),i("a",{attrs:{href:"https://www.zhihu.com/question/21682976/answer/79489643",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub 的 Pull Request 是指什么意思？"),i("OutboundLink")],1)]),t._v(" "),i("h2",{attrs:{id:"使用git-flow"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#使用git-flow"}},[t._v("#")]),t._v(" 使用git-flow")]),t._v(" "),i("p",[t._v("使用"),i("a",{attrs:{href:"https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-flow"),i("OutboundLink")],1),t._v("这个工具可以帮助我们更好的控制我们的工作流程")]),t._v(" "),i("h2",{attrs:{id:"commit-message-规范"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#commit-message-规范"}},[t._v("#")]),t._v(" commit message 规范")]),t._v(" "),i("p",[t._v("commit message是必须要遵循一定的规范的，随意的commit message只会让人感受到不专业。这里我们参考"),i("a",{attrs:{href:"https://gist.github.com/stephenparish/9941e89d80e2bc58a153",target:"_blank",rel:"noopener noreferrer"}},[t._v("AngularJS commit message conventions"),i("OutboundLink")],1)]),t._v(" "),i("blockquote",[i("p",[t._v("This would add kinda “context” information. Look at these messages (taken from last few angular’s commits):"),i("br"),t._v("\nFix small typo in docs widget (tutorial instructions)"),i("br"),t._v("\nFix test for scenario.Application - should remove old iframe"),i("br"),t._v("\ndocs - various doc fixes"),i("br"),t._v("\ndocs - stripping extra new lines"),i("br"),t._v("\nReplaced double line break with single when text is fetched from Google"),i("br"),t._v("\nAdded support for properties in documentation")])]),t._v(" "),i("h2",{attrs:{id:"使用git-rebase-来合并你的commit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#使用git-rebase-来合并你的commit"}},[t._v("#")]),t._v(" 使用git rebase 来合并你的commit")]),t._v(" "),i("p",[t._v("大部分人在实际开发过程中，都会建立自己的分支开发，这是大部分团队都能做到的，但是我们在测试问题的时候总是会提交一些无用的commit去远程的repo，自己的分支还好，但是最后把自己的分支合并到master上的时候如果还带上这些commit就十分不雅观了，当然github的PR功能已经给我们合并PR的时候提供了多种选项，其中就包括rebase。但是这里还是要介绍一个很多人不常用的命令，git rebase，也就是变基，git rebase功能很强大，也很容易一不小心弄不好就把你的整个commit或者git历史弄乱，所以这里我们不写如何用它来变基，只说如何用它来合并自己的commit。"),i("a",{attrs:{href:"http://gitbook.liuhui998.com/4_2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考教程"),i("OutboundLink")],1)]),t._v(" "),i("p",[t._v("注意事项: 只有个人操作的分支才可以用git rebase，多人一起协作的分支切记不要轻易使用git rebase,否则很容易造成冲突。")]),t._v(" "),i("p",[t._v("实战操作, 首先建立一个git目录。")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ mkdir testGit\n$ git init\n$ vim 1.txt\n")])])]),i("p",[t._v("在master分支对1.txt做修改并且commit")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://gw.alicdn.com/tfs/TB1luMFXBr0gK0jSZFnXXbRRXXa-1138-852.png",alt:""}})]),t._v(" "),i("p",[t._v("切换到rebase分支，修改两次1.txt，并进行两次commit\n"),i("img",{attrs:{src:"http://gw.alicdn.com/tfs/TB1UWIFXBv0gK0jSZKbXXbK2FXa-1140-856.png",alt:""}}),t._v("\n使用git rebase 合并刚刚的两次commit")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("git rebase -i HEAD~x x代表你要合并前x次commit 这里我们填2, 这里你也可以直接填具体的commit对应的hash值\ngit rebase -i HEAD~2\n")])])]),i("p",[i("img",{attrs:{src:"http://gw.alicdn.com/tfs/TB1Qs7DXAT2gK0jSZFkXXcIQFXa-1154-866.png",alt:""}}),t._v("\n这里的pick的意思是")]),t._v(" "),i("blockquote",[i("p",[t._v("pick：保留该commit（缩写:p）"),i("br"),t._v("\nreword：保留该commit，但我需要修改该commit的注释（缩写:r）"),i("br"),t._v("\nedit：保留该commit, 但我要停下来修改该提交(不仅仅修改注释)（缩写:e）"),i("br"),t._v("\nsquash：将该commit和前一个commit合并（缩写:s）"),i("br"),t._v("\nfixup：将该commit和前一个commit合并，但我不要保留该提交的注释信息（缩写:f）"),i("br"),t._v("\nexec：执行shell命令（缩写:x）"),i("br"),t._v("\ndrop：我要丢弃该commit（缩写:d）")])]),t._v(" "),i("p",[t._v("我们使用的比较多的是"),i("code",[t._v("s")]),t._v("和"),i("code",[t._v("f")]),t._v("两个选项，在这里我们想要合并两次commit为一个，所以将我们的rebase信息改为")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://gw.alicdn.com/tfs/TB1wPMDXuL2gK0jSZFmXXc7iXXa-1148-840.png",alt:""}})]),t._v(" "),i("p",[t._v("保存之后出现如下界面，可以让我们设置合并后的commit信息，在第二行写上新的cm信息，并且注释掉之前的两次cm信息，或者直接用dd来删除")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://gw.alicdn.com/tfs/TB1WuIDXAT2gK0jSZPcXXcKkpXa-1142-852.png",alt:""}})]),t._v(" "),i("p",[i("code",[t._v(":wq")]),t._v("保存后查看git log")]),t._v(" "),i("p",[i("img",{attrs:{src:"http://gw.alicdn.com/tfs/TB1l5.DXuP2gK0jSZFoXXauIVXa-1144-848.png",alt:""}})]),t._v(" "),i("p",[t._v("ok,前两次cm信息成功被合并为了一个")]),t._v(" "),i("p",[t._v("注意事项")]),t._v(" "),i("p",[t._v("你执行了rebase命令的分支如果和远程仓库的commit history不一样，是没有办法直接push到远程仓库的，因为这时候你本地仓库的commit history已经修改了，和远程的会冲突。")]),t._v(" "),i("p",[t._v("解决方式")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("$ git push origin dev -f // 使用--force来强制push，但你要清楚这可能会导致你的一些commit记录的丢失，所以请仅在个人分支进行该操作\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);
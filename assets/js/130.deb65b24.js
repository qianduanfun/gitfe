(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{529:function(e,t,s){"use strict";s.r(t);var n=s(48),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[s("em",[e._v("tree shaking")]),e._v(" 是一个术语，通常用于描述移除 JavaScript 上下文中的未引用代码(dead-code)。它依赖于 ES2015 模块语法的 "),s("a",{attrs:{href:"http://exploringjs.com/es6/ch_modules.html#static-module-structure",target:"_blank",rel:"noopener noreferrer"}},[e._v("静态结构"),s("OutboundLink")],1),e._v(" 特性，例如 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("import")]),s("OutboundLink")],1),e._v(" 和 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("export")]),s("OutboundLink")],1),e._v("。这个术语和概念实际上是由 ES2015 模块打包工具 "),s("a",{attrs:{href:"https://github.com/rollup/rollup",target:"_blank",rel:"noopener noreferrer"}},[e._v("rollup"),s("OutboundLink")],1),e._v(" 普及起来的。")]),e._v(" "),s("p",[e._v("webpack 2 正式版本内置支持 ES2015 模块（也叫做 "),s("em",[e._v("harmony modules")]),e._v("）和未使用模块检测能力。新的 webpack 4 正式版本扩展了此检测能力，通过 "),s("code",[e._v("package.json")]),e._v(" 的 "),s("code",[e._v('"sideEffects"')]),e._v(' 属性作为标记，向 compiler 提供提示，表明项目中的哪些文件是 "pure(纯的 ES2015 模块)"，由此可以安全地删除文件中未使用的部分。')]),e._v(" "),s("p",[e._v("T> 本指南的继承自 "),s("a",{attrs:{href:"/guides/getting-started"}},[e._v("起步")]),e._v(" 指南。如果你尚未阅读该指南，请先行阅读。")]),e._v(" "),s("h2",{attrs:{id:"添加一个通用模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加一个通用模块"}},[e._v("#")]),e._v(" 添加一个通用模块")]),e._v(" "),s("p",[e._v("在我们的项目中添加一个新的通用模块文件 "),s("code",[e._v("src/math.js")]),e._v("，并导出两个函数：")]),e._v(" "),s("p",[s("strong",[e._v("project")])]),e._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[e._v("webpack-demo\n|- package.json\n|- webpack.config.js\n|- /dist\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" |- bundle.js\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" |- index.html\n")])]),e._v("|- /src\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" |- index.js\n")])]),s("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" |- math.js\n")])]),e._v("|- /node_modules\n")])])]),s("p",[s("strong",[e._v("src/math.js")])]),e._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("square")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("将 "),s("code",[e._v("mode")]),e._v(" 配置选项设置为 "),s("RouterLink",{attrs:{to:"/concepts/mode/#mode-development"}},[e._v("development")]),e._v(" 以确保 bundle 是未压缩版本：")],1),e._v(" "),s("p",[s("strong",[e._v("webpack.config.js")])]),e._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[e._v("const path = require('path');\n\nmodule.exports = {\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" entry: './src/index.js',\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" output: {\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   filename: 'bundle.js',\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   path: path.resolve(__dirname, 'dist')\n")])]),s("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" }\n")])]),s("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" },\n")]),s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" mode: 'development',\n")]),s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" optimization: {\n")]),s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   usedExports: true\n")]),s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" }\n")])]),e._v("};\n")])])]),s("p",[e._v("配置完这些后，更新入口脚本，使用其中一个新方法，并且为了简化示例，我们先将 "),s("code",[e._v("lodash")]),e._v(" 删除：")]),e._v(" "),s("p",[s("strong",[e._v("src/index.js")])]),e._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[s("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" import _ from 'lodash';\n")])]),s("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" import { cube } from './math.js';\n")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" function component() {\n")])]),s("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   var element = document.createElement('div');\n")])]),s("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   var element = document.createElement('pre');\n")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   // lodash 是由当前 script 脚本 import 进来的\n")]),s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")])]),s("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   element.innerHTML = [\n")]),s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("     'Hello webpack!',\n")]),s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("     '5 cubed is equal to ' + cube(5)\n")]),s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   ].join('\\n\\n');\n")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   return element;\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" }\n")])]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" document.body.appendChild(component());\n")])])])])]),s("p",[e._v("注意，我们__没有从 "),s("code",[e._v("src/math.js")]),e._v(" 模块中 "),s("code",[e._v("import")]),e._v(" 另外一个 "),s("code",[e._v("square")]),e._v(" 方法__。这个函数就是所谓的“未引用代码(dead code)”，也就是说，应该删除掉未被引用的 "),s("code",[e._v("export")]),e._v("。现在运行 npm script "),s("code",[e._v("npm run build")]),e._v("，并查看输出的 bundle：")]),e._v(" "),s("p",[s("strong",[e._v("dist/bundle.js (around lines 90 - 100)")])]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* 1 */")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/***/")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" __webpack_exports__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" __webpack_require__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'use strict'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* unused harmony export square */")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* harmony export (immutable) */")]),e._v(" __webpack_exports__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" cube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("square")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("p",[e._v("注意，上面的 "),s("code",[e._v("unused harmony export square")]),e._v(" 注释。如果你观察它下面的代码，你会注意到虽然我们没有引用 "),s("code",[e._v("square")]),e._v("，但它仍然被包含在 bundle 中。我们将在下一节解决这个问题。")]),e._v(" "),s("h2",{attrs:{id:"将文件标记为-side-effect-free-无副作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将文件标记为-side-effect-free-无副作用"}},[e._v("#")]),e._v(" 将文件标记为 side-effect-free(无副作用)")]),e._v(" "),s("p",[e._v("在一个纯粹的 ESM 模块世界中，很容易识别出哪些文件有 side effect。然而，我们的项目无法达到这种纯度，所以，此时有必要提示 webpack compiler 哪些代码是“纯粹部分”。")]),e._v(" "),s("p",[e._v("通过 package.json 的 "),s("code",[e._v('"sideEffects"')]),e._v(" 属性，来实现这种方式。")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"your-project"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sideEffects"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("如果所有代码都不包含 side effect，我们就可以简单地将该属性标记为 "),s("code",[e._v("false")]),e._v("，来告知 webpack，它可以安全地删除未用到的 export。")]),e._v(" "),s("p",[e._v('T> "side effect(副作用)" 的定义是，在导入时会执行特殊行为的代码，而不是仅仅暴露一个 export 或多个 export。举例说明，例如 polyfill，它影响全局作用域，并且通常不提供 export。')]),e._v(" "),s("p",[e._v("如果你的代码确实有一些副作用，可以改为提供一个数组：")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"your-project"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sideEffects"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"./src/some-side-effectful-file.js"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("数组方式支持相对路径、绝对路径和 glob 模式匹配相关文件。它在内部使用 "),s("a",{attrs:{href:"https://github.com/micromatch/micromatch#matching-features",target:"_blank",rel:"noopener noreferrer"}},[e._v("micromatch"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("p",[e._v("T> 注意，所有导入文件都会受到 tree shaking 的影响。这意味着，如果在项目中使用类似 "),s("code",[e._v("css-loader")]),e._v(" 并 import 一个 CSS 文件，则需要将其添加到 side effect 列表中，以免在生产模式中无意中将它删除：")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"your-project"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sideEffects"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"./src/some-side-effectful-file.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*.css"')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("最后，还可以在 "),s("RouterLink",{attrs:{to:"/configuration/module/#module-rules"}},[s("code",[e._v("module.rules")]),e._v(" 配置选项")]),e._v(" 中设置 "),s("code",[e._v('"sideEffects"')]),e._v("。")],1),e._v(" "),s("h2",{attrs:{id:"压缩输出结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#压缩输出结果"}},[e._v("#")]),e._v(" 压缩输出结果")]),e._v(" "),s("p",[e._v("通过 "),s("code",[e._v("import")]),e._v(" 和 "),s("code",[e._v("export")]),e._v("  语法，我们已经找出需要删除的“未引用代码(dead code)”，然而，不仅仅是要找出，还要在 bundle 中删除它们。为此，我们需要将 "),s("code",[e._v("mode")]),e._v(" 配置选项设置为 "),s("RouterLink",{attrs:{to:"/concepts/mode/#mode-production"}},[s("code",[e._v("production")])]),e._v("。")],1),e._v(" "),s("p",[s("strong",[e._v("webpack.config.js")])]),e._v(" "),s("div",{staticClass:"language-diff extra-class"},[s("pre",{pre:!0,attrs:{class:"language-diff"}},[s("code",[e._v("const path = require('path');\n\nmodule.exports = {\n"),s("span",{pre:!0,attrs:{class:"token unchanged"}},[s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" entry: './src/index.js',\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" output: {\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   filename: 'bundle.js',\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   path: path.resolve(__dirname, 'dist')\n")]),s("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[e._v(" ")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" },\n")])]),s("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" mode: 'development',\n")]),s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" optimization: {\n")]),s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v("   usedExports: true\n")]),s("span",{pre:!0,attrs:{class:"token prefix deleted"}},[e._v("-")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" }\n")])]),s("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[s("span",{pre:!0,attrs:{class:"token prefix inserted"}},[e._v("+")]),s("span",{pre:!0,attrs:{class:"token line"}},[e._v(" mode: 'production'\n")])]),e._v("};\n")])])]),s("p",[e._v("T> 注意，也可以在命令行接口中使用 "),s("code",[e._v("--optimize-minimize")]),e._v(" 标记，来启用 "),s("code",[e._v("TerserPlugin")]),e._v("。")]),e._v(" "),s("p",[e._v("准备就绪后，然后运行另一个 npm script "),s("code",[e._v("npm run build")]),e._v("，看看输出结果是否发生改变。")]),e._v(" "),s("p",[e._v("你发现 "),s("code",[e._v("dist/bundle.js")]),e._v(" 中的差异了吗？显然，现在整个 bundle 都已经被 minify(压缩) 和 mangle(混淆破坏)，但是如果仔细观察，则不会看到引入 "),s("code",[e._v("square")]),e._v(" 函数，但能看到 "),s("code",[e._v("cube")]),e._v(" 函数的混淆破坏版本（"),s("code",[e._v("function r(e){return e*e*e}n.a=r")]),e._v("）。现在，随着 minification(代码压缩) 和 tree shaking，我们的 bundle 减小几个字节！虽然，在这个特定示例中，可能看起来没有减少很多，但是，在有着复杂依赖树的大型应用程序上运行 tree shaking 时，会对 bundle 产生显著的体积优化。")]),e._v(" "),s("p",[e._v("T> 运行 tree shaking 需要 "),s("a",{attrs:{href:"/plugins/module-concatenation-plugin"}},[e._v("ModuleConcatenationPlugin")]),e._v("。通过 "),s("code",[e._v('mode: "production"')]),e._v(" 可以添加此插件。如果你没有使用 mode 设置，记得手动添加 "),s("a",{attrs:{href:"/plugins/module-concatenation-plugin"}},[e._v("ModuleConcatenationPlugin")]),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[e._v("#")]),e._v(" 结论")]),e._v(" "),s("p",[e._v("我们已经知道，想要使用 "),s("em",[e._v("tree shaking")]),e._v(" 必须注意以下……")]),e._v(" "),s("ul",[s("li",[e._v("使用 ES2015 模块语法（即 "),s("code",[e._v("import")]),e._v(" 和 "),s("code",[e._v("export")]),e._v("）。")]),e._v(" "),s("li",[e._v("确保没有 compiler 将 ES2015 模块语法转换为 CommonJS 模块（这也是流行的 Babel preset 中 @babel/preset-env 的默认行为 - 更多详细信息请查看 "),s("a",{attrs:{href:"https://babel.docschina.org/docs/en/babel-preset-env#modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档"),s("OutboundLink")],1),e._v("）。")]),e._v(" "),s("li",[e._v("在项目 "),s("code",[e._v("package.json")]),e._v(' 文件中，添加一个 "sideEffects" 属性。')]),e._v(" "),s("li",[e._v("通过将 "),s("code",[e._v("mode")]),e._v(" 选项设置为 "),s("RouterLink",{attrs:{to:"/concepts/mode/#mode-production"}},[s("code",[e._v("production")])]),e._v("，启用 minification(代码压缩) 和 tree shaking。")],1)]),e._v(" "),s("p",[e._v("你可以将应用程序想象成一棵树。绿色表示实际用到的 source code(源码) 和 library(库)，是树上活的树叶。灰色表示未引用代码，是秋天树上枯萎的树叶。为了除去死去的树叶，你必须摇动这棵树，使它们落下。")]),e._v(" "),s("p",[e._v("如果你对优化输出很感兴趣，请进入到下个指南，来了解 "),s("a",{attrs:{href:"/guides/production"}},[e._v("生产环境")]),e._v(" 构建的详细细节。")])])}),[],!1,null,null,null);t.default=a.exports}}]);
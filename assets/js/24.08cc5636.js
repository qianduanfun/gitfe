(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{424:function(t,a,s){"use strict";s.r(a);var r=s(48),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"node-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[t._v("#")]),t._v(" Node.js")]),t._v(" "),s("p",[t._v("本文档将会介绍我们在开发Node.js应用时会用到的一些工具")]),t._v(" "),s("h2",{attrs:{id:"nvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nvm"}},[t._v("#")]),t._v(" nvm")]),t._v(" "),s("p",[t._v("管理Node.js版本，通过"),s("a",{attrs:{href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("nvm"),s("OutboundLink")],1),t._v("我们可以同时安装/切换不同的Node.js版本")]),t._v(" "),s("h3",{attrs:{id:"安装nvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装nvm"}},[t._v("#")]),t._v(" 安装nvm")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\n")])])]),s("h3",{attrs:{id:"添加环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加环境变量"}},[t._v("#")]),t._v(" 添加环境变量")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ vim ~/.zshrc\n\n在尾部添加以下配置\nexport NVM_DIR="${XDG_CONFIG_HOME/:-$HOME/.}nvm"\n[ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh" # This loads nvm\n')])])]),s("h3",{attrs:{id:"使用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用命令"}},[t._v("#")]),t._v(" 使用命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ nvm ls-remote // 列出所有支持的Node.js版本\n$ nvm ls // 列出本地已安装的Node.js版本\n$ nvm install 11.5.0 // 安装指定的Node.js版本\n$ nvm alias default 11 // 设置默认使用的版本\n")])])]),s("h2",{attrs:{id:"nrm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nrm"}},[t._v("#")]),t._v(" nrm")]),t._v(" "),s("p",[t._v("使用"),s("a",{attrs:{href:"https://github.com/Pana/nrm",target:"_blank",rel:"noopener noreferrer"}},[t._v("nrm"),s("OutboundLink")],1),t._v("可以让我们来切换不同的npm源而不用单独安装cnpm之类的库")]),t._v(" "),s("h3",{attrs:{id:"安装nrm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装nrm"}},[t._v("#")]),t._v(" 安装nrm")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ npm install -g nrm\n")])])]),s("h3",{attrs:{id:"使用命令-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用命令-2"}},[t._v("#")]),t._v(" 使用命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ nrm ls // 列出当前支持切换的源\n$ nrm use taobao // 使用taobao的源作为默认的npm源\n")])])]),s("h2",{attrs:{id:"实用模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实用模块"}},[t._v("#")]),t._v(" 实用模块")]),t._v(" "),s("p",[t._v("下面来介绍一些实用的Node.js模块")]),t._v(" "),s("h3",{attrs:{id:"http-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-server"}},[t._v("#")]),t._v(" http-server")]),t._v(" "),s("p",[t._v("使用"),s("a",{attrs:{href:"https://www.npmjs.com/package/http-server",target:"_blank",rel:"noopener noreferrer"}},[t._v("http-server"),s("OutboundLink")],1),t._v("我们可以快速的创建一个本地http server服务，并且托管我们当前目录作为静态资源文件夹而不用特地去用Node.js框架来搭建一个静态资源服务")]),t._v(" "),s("h4",{attrs:{id:"使用http-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用http-server"}},[t._v("#")]),t._v(" 使用http-server")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ npm install http-server -g // 安装http-server模块\n$ http-server . -p 8080 // 监听8080端口，以当前目录作为静态资源目录\n")])])]),s("h3",{attrs:{id:"promisify"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promisify"}},[t._v("#")]),t._v(" promisify")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://nodejs.cn/api/util.html#util_util_promisify_original",target:"_blank",rel:"noopener noreferrer"}},[t._v("util.promisify"),s("OutboundLink")],1),t._v("是Node.js的官方API，使用该API我们可以将callback形式的Node.js API包装为Promise的形式,只要符合最后一个参数是callback，并且callback第一个参数是错误处理的API都可以通过promisify来包装")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" promisify "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'util'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" exec "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child_process'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" execWithPromise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("promisify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("installServer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" stdout "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execWithPromise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("npm i -g http-server")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"mdv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mdv"}},[t._v("#")]),t._v(" mdv")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/mdv",target:"_blank",rel:"noopener noreferrer"}},[t._v("mdv"),s("OutboundLink")],1),t._v("是一个用来校验markdown语法的npm模块，此模块检测的语法错误类型包括七项：插入图片时是否添加Alt标签，超链接是否包含链接名称，页面内跳转时是否缺失锚点，页面内跳转的地址是否包含#，锚点是否包含#，锚点是否重复定义，json、xml语法是否解析失败。")]),t._v(" "),s("h4",{attrs:{id:"使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),s("ol",[s("li",[t._v("使用npm install mdv -g 进行安装")]),t._v(" "),s("li",[t._v("利用cd切换到需要校验的markdown文件地址，切记此工具不能检测文件夹")]),t._v(" "),s("li",[t._v("输入mdv 文件名 -d等命令，全部的命令如下图所示，其中-d 用来显示错误信息，-s 用来生成与markdown文件对应的html文件， -w 用来显示错误和警告信息。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1gUZZaQL0gK0jSZFAXXcA9pXa-1144-348.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"错误信息测试用例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误信息测试用例"}},[t._v("#")]),t._v(" 错误信息测试用例")]),t._v(" "),s("ul",[s("li",[t._v("插入图片不添加Alt标签")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB11Sc0aRr0gK0jSZFnXXbRRXXa-1172-98.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1f7ZWaFP7gK0jSZFjXXc5aXXa-1128-182.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("超链接不包含链接名称")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1d5s0aO_1gK0jSZFqXXcpaXXa-532-154.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1vWKpaebviK0jSZFNXXaApXXa-1142-290.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("页面内跳转缺失锚点(找不到链接跳转的目的地)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1ltw0aUz1gK0jSZLeXXb9kVXa-1030-276.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1ywcYaKP2gK0jSZFoXXauIVXa-1136-278.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("锚点是否包含#（锚点可以用标题或者用a标签的name来定义)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1fc..aRv0gK0jSZKbXXbK2FXa-568-160.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1TFVXa7L0gK0jSZFAXXcA9pXa-1130-304.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("页面内跳转的地址是否包含#")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1m9sYaFT7gK0jSZFpXXaTkpXa-960-212.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1dTsYaRr0gK0jSZFnXXbRRXXa-1128-404.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("锚点是否重复定义")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1giQYaQL0gK0jSZFAXXcA9pXa-766-206.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB14zM.aQL0gK0jSZFtXXXQCXXa-1144-260.png",alt:""}})]),t._v(" "),s("ul",[s("li",[t._v("json语法是否解析失败")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1Y.EYaQL0gK0jSZFxXXXWHVXa-740-268.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1.rZ.aUz1gK0jSZLeXXb9kVXa-1142-438.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"使用-npm-link-调试模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-npm-link-调试模块"}},[t._v("#")]),t._v(" 使用 npm link 调试模块")]),t._v(" "),s("p",[t._v("熟练的使用npm link可以帮助我们本地调试任何开源项目，当我们的一个项目还没有发布到npmjs.com想在本地测试时，或者当我们想修改React/Vue的源码想在本地测试效果时，我们都需要使用npm link来进行测试。npm link 类似于Linux中的软链接，简单理解可以理解为一个快捷方式。使用方式：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ cd vue // 进入本地clone下来的vue文件夹\n$ npm link // 如果没有全局安装过vue 此时会创建全局node_modules下的一个软链接vue指向本地clone的vue入口文件\n$ npm link vue // 在需要用调试vue模块的应用执行该命令会将当前应用的node_modules/vue指向全局node_modules/vue软链接\n")])])]),s("p",[s("img",{attrs:{src:"https://gw.alicdn.com/tfs/TB1iEl0XKH2gK0jSZFEXXcqMpXa-1450-876.jpg",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://gw.alicdn.com/tfs/TB1QBh0XQY2gK0jSZFgXXc5OFXa-1450-860.jpg",alt:""}})])])}),[],!1,null,null,null);a.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{525:function(n,e,r){"use strict";r.r(e);var s=r(48),t=Object(s.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"基于axios-的request-封装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于axios-的request-封装"}},[this._v("#")]),this._v(" 基于axios 的request 封装")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("import axios from 'axios'\n\naxios.defaults.withCredentials = true\naxios.defaults.timeout = 50000\naxios.defaults.headers.common['Content-Type'] = 'application/json'\nconst errorStatus = [401, 500, 502, 504, 400]\n// const baseURL = ``\n\naxios.defaults.baseURL = 'http://api.shudong.wang/v1'\n// 中间件 拦截请求-\naxios.interceptors.response.use(\n  response => {\n    // if (errorStatus.indexOf(response.status) > -1) {\n    //   router.push({\n    //     path: '/',\n    //   })\n    // }\n    // if ([403, -505].indexOf(response.data.code) > -1) {\n    //   document.location.href = urlPassport\n    // }\n    return response\n  },\n  err => {\n    if (!err.response) {\n      // apiError('ApiError', err)\n      return\n    }\n    const res = err.response\n    const option = { status: res.status, url: res.config.url, params: res.config.params }\n    // apiError('ApiError', option)\n    // return Promise.reject(err)\n  }\n)\n\n/**\n * get\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nconst get = (url, params = {}) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url, {\n        params: params,\n      })\n      .then(response => {\n        // if (response.data.code !== 1) {\n        // console.error('api_error', response.data.msg)\n        // reject(response)\n        // }\n        resolve(response)\n      })\n      .catch(error => {\n        // reject(err)\n      })\n  })\n}\n\n/**\n * post\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nconst post = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    axios.post(url, data).then(\n      response => {\n        resolve(response)\n      },\n      err => {\n        reject(err)\n      }\n    )\n  })\n}\n\nexport default {\n  get,\n  post,\n}\n\n")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);
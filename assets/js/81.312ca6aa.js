(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{481:function(e,t,r){"use strict";r.r(t);var a=r(48),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"约定式提交-1-0-0-beta-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#约定式提交-1-0-0-beta-4"}},[e._v("#")]),e._v(" 约定式提交 1.0.0-beta.4")]),e._v(" "),r("h2",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),r("p",[e._v("约定式提交规范是一种基于提交消息的轻量级约定。\n它提供了一组用于创建清晰的提交历史的简单规则；\n这使得编写基于规范的自动化工具变得更容易。\n这个约定与 "),r("a",{attrs:{href:"http://semver.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("SemVer"),r("OutboundLink")],1),e._v(" 相吻合，\n在提交信息中描述新特性、bug 修复和破坏性变更。")]),e._v(" "),r("p",[e._v("提交说明的结构如下所示：")]),e._v(" "),r("hr"),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("<类型>[可选的作用域]: <描述>\n\n[可选的正文]\n\n[可选的脚注]\n")])])]),r("hr"),e._v(" "),r("br"),e._v("\n提交说明包含了下面的结构化元素，以向类库使用者表明其意图：\n"),r("ol",[r("li",[r("strong",[e._v("fix:")]),e._v(" "),r("em",[e._v("类型")]),e._v(" 为 "),r("code",[e._v("fix")]),e._v(" 的提交表示在代码库中修复了一个 bug（这和语义化版本中的 "),r("a",{attrs:{href:"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("PATCH")]),r("OutboundLink")],1),e._v(" 相对应）。")]),e._v(" "),r("li",[r("strong",[e._v("feat:")]),e._v(" "),r("em",[e._v("类型")]),e._v(" 为 "),r("code",[e._v("feat")]),e._v(" 的提交表示在代码库中新增了一个功能（这和语义化版本中的 "),r("a",{attrs:{href:"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("MINOR")]),r("OutboundLink")],1),e._v(" 相对应）。")]),e._v(" "),r("li",[r("strong",[e._v("BREAKING CHANGE:")]),e._v(" 在可选的正文或脚注的起始位置带有 "),r("code",[e._v("BREAKING CHANGE:")]),e._v(" 的提交，表示引入了破坏性 API 变更（这和语义化版本中的 "),r("a",{attrs:{href:"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("MAJOR")]),r("OutboundLink")],1),e._v(" 相对应）。\n破坏性变更可以是任意 "),r("em",[e._v("类型")]),e._v(" 提交的一部分。")]),e._v(" "),r("li",[r("strong",[e._v("其它情况:")]),e._v(" 除 "),r("code",[e._v("fix:")]),e._v(" 和 "),r("code",[e._v("feat:")]),e._v(" 之外的提交 "),r("em",[e._v("类型")]),e._v(" 也是被允许的，例如 "),r("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional",target:"_blank",rel:"noopener noreferrer"}},[e._v("@commitlint/config-conventional"),r("OutboundLink")],1),e._v("（基于 "),r("a",{attrs:{href:"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines",target:"_blank",rel:"noopener noreferrer"}},[e._v("Angular 约定"),r("OutboundLink")],1),e._v("）中推荐的 "),r("code",[e._v("chore:")]),e._v("、"),r("code",[e._v("docs:")]),e._v("、"),r("code",[e._v("style:")]),e._v("、"),r("code",[e._v("refactor:")]),e._v("、"),r("code",[e._v("perf:")]),e._v("、"),r("code",[e._v("test:")]),e._v(" 及其他标签。\n我们也推荐使用"),r("code",[e._v("improvement")]),e._v("，用于对当前实现进行改进而没有添加新功能或修复错误的提交。\n请注意，这些标签在约定式提交规范中并不是强制性的。并且在语义化版本中没有隐式的影响（除非他们包含 BREAKING CHANGE）。\n"),r("br"),e._v("\n可以为提交类型添加一个围在圆括号内的作用域，以为其提供额外的上下文信息。例如 "),r("code",[e._v("feat(parser): adds ability to parse arrays.")]),e._v("。")])]),e._v(" "),r("h2",{attrs:{id:"示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),r("h3",{attrs:{id:"包含了描述以及正文内有破坏性变更的提交说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#包含了描述以及正文内有破坏性变更的提交说明"}},[e._v("#")]),e._v(" 包含了描述以及正文内有破坏性变更的提交说明")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("feat: allow provided config object to extend other configs\n\nBREAKING CHANGE: `extends` key in config file is now used for extending other config files\n")])])]),r("h3",{attrs:{id:"包含了可选的-字符以提醒注意破坏性变更的提交说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#包含了可选的-字符以提醒注意破坏性变更的提交说明"}},[e._v("#")]),e._v(" 包含了可选的 "),r("code",[e._v("!")]),e._v(" 字符以提醒注意破坏性变更的提交说明")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("chore!: drop Node 6 from testing matrix\n\nBREAKING CHANGE: dropping Node 6 which hits end of life in April\n")])])]),r("h3",{attrs:{id:"不包含正文的提交说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不包含正文的提交说明"}},[e._v("#")]),e._v(" 不包含正文的提交说明")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docs: correct spelling of CHANGELOG\n")])])]),r("h3",{attrs:{id:"包含作用域的提交说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#包含作用域的提交说明"}},[e._v("#")]),e._v(" 包含作用域的提交说明")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("feat(lang): add polish language\n")])])]),r("h3",{attrs:{id:"为-fix-编写的提交说明-包含-可选的-issue-编号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为-fix-编写的提交说明-包含-可选的-issue-编号"}},[e._v("#")]),e._v(" 为 fix 编写的提交说明，包含（可选的） issue 编号")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("fix: correct minor typos in code\n\nsee the issue for details on the typos fixed\n\ncloses issue #12\n")])])]),r("h2",{attrs:{id:"约定式提交规范"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#约定式提交规范"}},[e._v("#")]),e._v(" 约定式提交规范")]),e._v(" "),r("p",[e._v("本文中的关键词 “必须（MUST）”、“禁止（MUST NOT）”、“必要（REQUIRED）”、“应当（SHALL）”、“不应当（SHALL NOT）”、“应该（SHOULD）”、“不应该（SHOULD NOT）”、“推荐（RECOMMENDED）”、“可以（MAY）” 和 “可选（OPTIONAL）” ，解释参考 "),r("a",{attrs:{href:"https://www.ietf.org/rfc/rfc2119.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 2119"),r("OutboundLink")],1),e._v(" 中所述。")]),e._v(" "),r("ol",[r("li",[e._v("每个提交都"),r("strong",[e._v("必须")]),e._v("使用类型字段前缀，它由一个名词组成，诸如 "),r("code",[e._v("feat")]),e._v(" 或 "),r("code",[e._v("fix")]),e._v(" ，其后接一个"),r("strong",[e._v("可选的")]),e._v("作用域字段，以及一个"),r("strong",[e._v("必要的")]),e._v("冒号（英文半角）和空格。")]),e._v(" "),r("li",[e._v("当一个提交为应用或类库实现了新特性时，"),r("strong",[e._v("必须")]),e._v("使用 "),r("code",[e._v("feat")]),e._v(" 类型。")]),e._v(" "),r("li",[e._v("当一个提交为应用修复了 bug 时，"),r("strong",[e._v("必须")]),e._v("使用 "),r("code",[e._v("fix")]),e._v(" 类型。")]),e._v(" "),r("li",[e._v("作用域字段"),r("strong",[e._v("可以")]),e._v("跟随在类型字段后面。作用域"),r("strong",[e._v("必须")]),e._v("是一个描述某部分代码的名词，并用圆括号包围，例如： "),r("code",[e._v("fix(parser):")])]),e._v(" "),r("li",[e._v("描述字段"),r("strong",[e._v("必须")]),e._v("紧接在类型/作用域前缀的空格之后。描述指的是对代码变更的简短总结，例如： "),r("em",[e._v("fix: array parsing issue when multiple spaces were contained in string.")])]),e._v(" "),r("li",[e._v("在简短描述之后，"),r("strong",[e._v("可以")]),e._v("编写更长的提交正文，为代码变更提供额外的上下文信息。正文"),r("strong",[e._v("必须")]),e._v("起始于描述字段结束的一个空行后。")]),e._v(" "),r("li",[e._v("在正文结束的一个空行之后，"),r("strong",[e._v("可以")]),e._v("编写一行或多行脚注。脚注"),r("strong",[e._v("必须")]),e._v("包含关于提交的元信息，例如：关联的合并请求、Reviewer、破坏性变更，每条元信息一行。")]),e._v(" "),r("li",[e._v("破坏性变更"),r("strong",[e._v("必须")]),e._v("标示在正文区域最开始处，或脚注区域中某一行的开始。一个破坏性变更"),r("strong",[e._v("必须")]),e._v("包含大写的文本 "),r("code",[e._v("BREAKING CHANGE")]),e._v("，后面紧跟冒号和空格。")]),e._v(" "),r("li",[e._v("在 "),r("code",[e._v("BREAKING CHANGE:")]),e._v(" 之后"),r("strong",[e._v("必须")]),e._v("提供描述，以描述对 API 的变更。例如： "),r("em",[e._v("BREAKING CHANGE: environment variables now take precedence over config files.")])]),e._v(" "),r("li",[e._v("在提交说明中，"),r("strong",[e._v("可以")]),e._v("使用 "),r("code",[e._v("feat")]),e._v(" 和 "),r("code",[e._v("fix")]),e._v(" 之外的类型。")]),e._v(" "),r("li",[e._v("工具的实现"),r("strong",[e._v("必须不")]),e._v("区分大小写地解析构成约定式提交的信息单元，只有 "),r("code",[e._v("BREAKING CHANGE")]),e._v(" "),r("strong",[e._v("必须")]),e._v("是大写的。")]),e._v(" "),r("li",[r("strong",[e._v("可以")]),e._v("在类型/作用域前缀之后，"),r("code",[e._v(":")]),e._v(" 之前，附加 "),r("code",[e._v("!")]),e._v(" 字符，以进一步提醒注意破坏性变更。当有 "),r("code",[e._v("!")]),e._v(" 前缀时，正文或脚注内"),r("strong",[e._v("必须")]),e._v("包含 "),r("code",[e._v("BREAKING CHANGE: description")])])]),e._v(" "),r("h2",{attrs:{id:"为什么使用约定式提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用约定式提交"}},[e._v("#")]),e._v(" 为什么使用约定式提交")]),e._v(" "),r("ul",[r("li",[e._v("自动化生成 CHANGELOG。")]),e._v(" "),r("li",[e._v("基于提交的类型，自动决定语义化的版本变更。")]),e._v(" "),r("li",[e._v("向同事、公众与其他利益关系者传达变化的性质。")]),e._v(" "),r("li",[e._v("触发构建和部署流程。")]),e._v(" "),r("li",[e._v("让人们探索一个更加结构化的提交历史，以便降低对你的项目做出贡献的难度。")])]),e._v(" "),r("h2",{attrs:{id:"faq"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[e._v("#")]),e._v(" FAQ")]),e._v(" "),r("h3",{attrs:{id:"在初始开发阶段我该如何处理提交说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在初始开发阶段我该如何处理提交说明"}},[e._v("#")]),e._v(" 在初始开发阶段我该如何处理提交说明？")]),e._v(" "),r("p",[e._v("我们建议你按照假设你已发布了产品那样来处理。因为通常总 "),r("em",[e._v("有人")]),e._v(" 使用你的软件，即便那是你软件开发的同事们。他们会希望知道诸如修复了什么、哪里不兼容等信息。")]),e._v(" "),r("h3",{attrs:{id:"提交标题中的类型是大写还是小写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#提交标题中的类型是大写还是小写"}},[e._v("#")]),e._v(" 提交标题中的类型是大写还是小写?")]),e._v(" "),r("p",[e._v("大小写都可以，但最好是一致的。")]),e._v(" "),r("h3",{attrs:{id:"如果提交符合多种类型我该如何操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果提交符合多种类型我该如何操作"}},[e._v("#")]),e._v(" 如果提交符合多种类型我该如何操作？")]),e._v(" "),r("p",[e._v("回退并尽可能创建多次提交。约定式提交的好处之一是能够促使我们做出更有组织的提交和 PR。")]),e._v(" "),r("h3",{attrs:{id:"这不会阻碍快速开发和迭代吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#这不会阻碍快速开发和迭代吗"}},[e._v("#")]),e._v(" 这不会阻碍快速开发和迭代吗？")]),e._v(" "),r("p",[e._v("它阻碍的是以杂乱无章的方式快速前进。它助你能在横跨多个项目以及和多个贡献者协作时长期地快速演进。")]),e._v(" "),r("h3",{attrs:{id:"约定式提交会让开发者受限于提交的类型吗-因为他们会想着已提供的类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#约定式提交会让开发者受限于提交的类型吗-因为他们会想着已提供的类型"}},[e._v("#")]),e._v(" 约定式提交会让开发者受限于提交的类型吗（因为他们会想着已提供的类型）？")]),e._v(" "),r("p",[e._v("约定式提交鼓励我们更多地使用某些类型的提交，比如 "),r("code",[e._v("fixes")]),e._v("。除此之外，约定式提交的灵活性也允许你的团队使用自己的类型，并随着时间的推移更改这些类型。")]),e._v(" "),r("h3",{attrs:{id:"这和-semver-有什么关联呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#这和-semver-有什么关联呢"}},[e._v("#")]),e._v(" 这和 SemVer 有什么关联呢？")]),e._v(" "),r("p",[r("code",[e._v("fix")]),e._v(" 类型提交应当对应到 "),r("code",[e._v("PATCH")]),e._v(" 版本。"),r("code",[e._v("feat")]),e._v(" 类型提交应该对应到 "),r("code",[e._v("MINOR")]),e._v(" 版本。带有 "),r("code",[e._v("BREAKING CHANGE")]),e._v(" 的提交不管类型如何，都应该对应到 "),r("code",[e._v("MAJOR")]),e._v(" 版本。")]),e._v(" "),r("h3",{attrs:{id:"我对约定式提交做了形如-jameswomack-conventional-commit-spec-的扩展-该如何版本化管理这些扩展呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#我对约定式提交做了形如-jameswomack-conventional-commit-spec-的扩展-该如何版本化管理这些扩展呢"}},[e._v("#")]),e._v(" 我对约定式提交做了形如 "),r("code",[e._v("@jameswomack/conventional-commit-spec")]),e._v(" 的扩展，该如何版本化管理这些扩展呢？")]),e._v(" "),r("p",[e._v("我们推荐使用 SemVer 来发布你对于这个规范的扩展（并鼓励你创建这些扩展！）")]),e._v(" "),r("h3",{attrs:{id:"如果我不小心使用了错误的提交类型-该怎么办呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果我不小心使用了错误的提交类型-该怎么办呢"}},[e._v("#")]),e._v(" 如果我不小心使用了错误的提交类型，该怎么办呢？")]),e._v(" "),r("h4",{attrs:{id:"当你使用了在规范中但错误的类型时-例如将-feat-写成了-fix"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#当你使用了在规范中但错误的类型时-例如将-feat-写成了-fix"}},[e._v("#")]),e._v(" 当你使用了在规范中但错误的类型时，例如将 "),r("code",[e._v("feat")]),e._v(" 写成了 "),r("code",[e._v("fix")])]),e._v(" "),r("p",[e._v("在合并或发布这个错误之前，我们建议使用 "),r("code",[e._v("git rebase -i")]),e._v(" 来编辑提交历史。而在发布之后，根据你使用的工具和流程不同，会有不同的清理方案。")]),e._v(" "),r("h4",{attrs:{id:"当使用了不在规范中的类型时-例如将-feat-写成了-feet"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#当使用了不在规范中的类型时-例如将-feat-写成了-feet"}},[e._v("#")]),e._v(" 当使用了"),r("em",[e._v("不")]),e._v("在规范中的类型时，例如将 "),r("code",[e._v("feat")]),e._v(" 写成了 "),r("code",[e._v("feet")])]),e._v(" "),r("p",[e._v("在最坏的场景下，即便提交没有满足约定式提交的规范，也不会是世界末日。这只意味着这个提交会被基于规范的工具错过而已。")]),e._v(" "),r("h3",{attrs:{id:"所有的贡献者都需要使用约定式提交规范吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#所有的贡献者都需要使用约定式提交规范吗"}},[e._v("#")]),e._v(" 所有的贡献者都需要使用约定式提交规范吗？")]),e._v(" "),r("p",[e._v("并不！如果你使用基于 squash 的 Git 工作流，主管维护者可以在合并时清理提交信息——这不会对普通提交者产生额外的负担。\n有种常见的工作流是让 git 系统自动从 pull request 中 squash 出提交，并向主管维护者提供一份表单，用以在合并时输入合适的 git 提交信息。")]),e._v(" "),r("h2",{attrs:{id:"关于"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于"}},[e._v("#")]),e._v(" 关于")]),e._v(" "),r("p",[e._v("约定式提交规范受到了 "),r("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit",target:"_blank",rel:"noopener noreferrer"}},[e._v("Angular 提交准则"),r("OutboundLink")],1),e._v("的启发，并在很大程度上以其为依据。")]),e._v(" "),r("p",[e._v("该规范的首个草案来自下面这些项目中若干贡献者们的协作：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[e._v("conventional-changelog"),r("OutboundLink")],1),e._v("：一套从 git 历史中解析出约定式提交说明的工具。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://bumped.github.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("bumped"),r("OutboundLink")],1),e._v("：一个用于发布软件的工具，可以在为你的软件发布新版本前后轻松地执行操作。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/netflix/unleash",target:"_blank",rel:"noopener noreferrer"}},[e._v("unleash"),r("OutboundLink")],1),e._v("：一个用于自动化软件发行和发布生命周期的工具。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/lerna/lerna",target:"_blank",rel:"noopener noreferrer"}},[e._v("lerna"),r("OutboundLink")],1),e._v("：一个用于管理宏仓库（monorepo）的工具，源自 Babel 项目。")])]),e._v(" "),r("h2",{attrs:{id:"用于约定式提交的工具"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#用于约定式提交的工具"}},[e._v("#")]),e._v(" 用于约定式提交的工具")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/damianopetrungaro/php-commitizen",target:"_blank",rel:"noopener noreferrer"}},[e._v("php-commitizen"),r("OutboundLink")],1),e._v("：一个用于创建遵循约定式提交规范提交信息的工具。\n可配置，并且可以作为 composer 依赖项用于 PHP 项目，或可在非 PHP 项目中全局使用。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/autonomy/conform",target:"_blank",rel:"noopener noreferrer"}},[e._v("conform"),r("OutboundLink")],1),e._v("：一个可用以在 git 仓库上施加配置的工具，包括约定式提交。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/conventional-changelog/standard-version",target:"_blank",rel:"noopener noreferrer"}},[e._v("standard-version"),r("OutboundLink")],1),e._v(" 基于 GitHub 的新 squash 按钮与推荐的约定式提交工作流，自动管理版本和 CHANGELOG。")])]),e._v(" "),r("h2",{attrs:{id:"使用约定式提交的项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用约定式提交的项目"}},[e._v("#")]),e._v(" 使用约定式提交的项目")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/yargs/yargs",target:"_blank",rel:"noopener noreferrer"}},[e._v("yargs"),r("OutboundLink")],1),e._v("：广受欢迎的命令行参数解析器。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/istanbuljs/istanbuljs",target:"_blank",rel:"noopener noreferrer"}},[e._v("istanbuljs"),r("OutboundLink")],1),e._v("：一套为 JavaScript 测试生成测试覆盖率的开源工具和类库。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/UW-Madison-DoIT/angularjs-portal",target:"_blank",rel:"noopener noreferrer"}},[e._v("uPortal-home"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"https://github.com/UW-Madison-DoIT/uw-frame",target:"_blank",rel:"noopener noreferrer"}},[e._v("uPortal-application-framework"),r("OutboundLink")],1),e._v("：用于增强 "),r("a",{attrs:{href:"https://www.apereo.org/projects/uportal",target:"_blank",rel:"noopener noreferrer"}},[e._v("Apereo uPortal"),r("OutboundLink")],1),e._v(" 的可选用户界面。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/dmfay/massive-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("massive.js"),r("OutboundLink")],1),e._v("：一个用于 Node 和 PostgreSQL 的数据访问类库。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/electron/electron",target:"_blank",rel:"noopener noreferrer"}},[e._v("electron"),r("OutboundLink")],1),e._v("：用 JavaScript、HTML 和 CSS 构建跨平台应用。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/LeDDGroup/scroll-utility",target:"_blank",rel:"noopener noreferrer"}},[e._v("scroll-utility"),r("OutboundLink")],1),e._v("：一个居中元素和平滑动画的滚屏工具包实例。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/BlazeUI/blaze",target:"_blank",rel:"noopener noreferrer"}},[e._v("Blaze UI"),r("OutboundLink")],1),e._v("：无框架开源 UI 套件。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/monicahq/monica",target:"_blank",rel:"noopener noreferrer"}},[e._v("Monica"),r("OutboundLink")],1),e._v("：一个开源的人际关系管理系统。")])])])}),[],!1,null,null,null);t.default=v.exports}}]);
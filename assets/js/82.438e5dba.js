(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{480:function(a,s,t){"use strict";t.r(s);var e=t(48),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"此文果断收藏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#此文果断收藏"}},[a._v("#")]),a._v(" 此文果断收藏 🙈")]),a._v(" "),t("p",[a._v("Git是一个“分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过“回撤”这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用“回撤”是找不回来的。而“版本管理工具”能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。")]),a._v(" "),t("p",[a._v('下面的内容就是列举了常用的Git命令和一些小技巧，可以通过"页面内查找"的方式进行快速查询：'),t("code",[a._v("Ctrl/Command+f")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"开卷必读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开卷必读"}},[a._v("#")]),a._v(" 开卷必读")]),a._v(" "),t("ol",[t("li",[t("strong",[a._v("一定要先测试命令的效果后")]),a._v("，再用于工作环境中，以防造成不能弥补的后果！"),t("strong",[a._v("到时候别拿着砍刀来找我")])]),a._v(" "),t("li",[a._v("所有的命令都在"),t("code",[a._v("git version 2.7.4 (Apple Git-66)")]),a._v("下测试通过")]),a._v(" "),t("li",[a._v("统一概念：\n"),t("ul",[t("li",[a._v("工作区：改动（增删文件和内容）")]),a._v(" "),t("li",[a._v("暂存区：输入命令："),t("code",[a._v("git add 改动的文件名")]),a._v("，此次改动就放到了‘暂存区’")]),a._v(" "),t("li",[a._v("本地仓库(简称：本地)：输入命令："),t("code",[a._v("git commit 此次修改的描述")]),a._v("，此次改动就放到了’本地仓库’，每个commit，我叫它为一个‘版本’。")]),a._v(" "),t("li",[a._v("远程仓库(简称：远程)：输入命令："),t("code",[a._v("git push 远程仓库")]),a._v("，此次改动就放到了‘远程仓库’（GitHub等)")]),a._v(" "),t("li",[a._v("commit-id：输出命令："),t("code",[a._v("git log")]),a._v("，最上面那行"),t("code",[a._v("commit xxxxxx")]),a._v("，后面的字符串就是commit-id")])])])]),a._v(" "),t("h2",{attrs:{id:"展示帮助信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示帮助信息"}},[a._v("#")]),a._v(" 展示帮助信息")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" -g\n")])])]),t("h2",{attrs:{id:"回到远程仓库的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到远程仓库的状态"}},[a._v("#")]),a._v(" 回到远程仓库的状态")]),a._v(" "),t("p",[a._v("抛弃本地所有的修改，回到远程仓库的状态。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch --all "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard origin/master\n")])])]),t("h2",{attrs:{id:"重设第一个commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重设第一个commit"}},[a._v("#")]),a._v(" 重设第一个commit")]),a._v(" "),t("p",[a._v("也就是把所有的改动都重新放回工作区，并"),t("strong",[a._v("清空所有的commit")]),a._v("，这样就可以重新提交第一个commit了")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-ref -d HEAD\n")])])]),t("h2",{attrs:{id:"展示工作区和暂存区的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示工作区和暂存区的不同"}},[a._v("#")]),a._v(" 展示工作区和暂存区的不同")]),a._v(" "),t("p",[a._v("输出"),t("strong",[a._v("工作区")]),a._v("和"),t("strong",[a._v("暂存区")]),a._v("的different(不同)。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v("\n")])])]),t("p",[a._v("还可以展示本地仓库中任意两个commit之间的文件变动：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示暂存区和最近版本的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区和最近版本的不同"}},[a._v("#")]),a._v(" 展示暂存区和最近版本的不同")]),a._v(" "),t("p",[a._v("输出"),t("strong",[a._v("暂存区")]),a._v("和本地最近的版本(commit)的different(不同)。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --cached\n")])])]),t("h2",{attrs:{id:"展示暂存区、工作区和最近版本的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区、工作区和最近版本的不同"}},[a._v("#")]),a._v(" 展示暂存区、工作区和最近版本的不同")]),a._v(" "),t("p",[a._v("输出"),t("strong",[a._v("工作区")]),a._v("、"),t("strong",[a._v("暂存区")]),a._v(" 和本地最近的版本(commit)的different(不同)。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" HEAD\n")])])]),t("h2",{attrs:{id:"快速切换分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速切换分支"}},[a._v("#")]),a._v(" 快速切换分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -\n")])])]),t("h2",{attrs:{id:"删除已经合并到master的分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除已经合并到master的分支"}},[a._v("#")]),a._v(" 删除已经合并到master的分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch --merged master "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" -v "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^\\*\\|  master'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" -n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d\n")])])]),t("h2",{attrs:{id:"展示本地分支关联远程仓库的情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示本地分支关联远程仓库的情况"}},[a._v("#")]),a._v(" 展示本地分支关联远程仓库的情况")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -vv\n")])])]),t("h2",{attrs:{id:"关联远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关联远程分支"}},[a._v("#")]),a._v(" 关联远程分支")]),a._v(" "),t("p",[a._v("关联之后，"),t("code",[a._v("git branch -vv")]),a._v("就可以展示关联的远程分支名了，同时推送到远程仓库直接："),t("code",[a._v("git push")]),a._v("，不需要指定远程仓库了。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -u origin/mybranch\n")])])]),t("p",[a._v("或者在push时加上"),t("code",[a._v("-u")]),a._v("参数")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin/mybranch -u\n")])])]),t("h2",{attrs:{id:"列出所有远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程分支"}},[a._v("#")]),a._v(" 列出所有远程分支")]),a._v(" "),t("p",[a._v("-r参数相当于：remote")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -r\n")])])]),t("h2",{attrs:{id:"列出本地和远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出本地和远程分支"}},[a._v("#")]),a._v(" 列出本地和远程分支")]),a._v(" "),t("p",[a._v("-a参数相当于：all")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -a\n")])])]),t("h2",{attrs:{id:"创建并切换到本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换到本地分支"}},[a._v("#")]),a._v(" 创建并切换到本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"创建并切换到远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换到远程分支"}},[a._v("#")]),a._v(" 创建并切换到远程分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" origin/"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"删除本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支"}},[a._v("#")]),a._v(" 删除本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("local-branchname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"删除远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[a._v("#")]),a._v(" 删除远程分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --delete "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-branchname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("或者")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin :"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-branchname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"重命名本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重命名本地分支"}},[a._v("#")]),a._v(" 重命名本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -m "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("new-branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"查看标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看标签"}},[a._v("#")]),a._v(" 查看标签")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git tag\n")])])]),t("p",[a._v("展示当前分支的最近的tag")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" describe --tags --abbrev"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])]),t("h2",{attrs:{id:"本地创建标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地创建标签"}},[a._v("#")]),a._v(" 本地创建标签")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version-number"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("默认tag是打在最近的一次commit上，如果需要指定commit打tag：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version-number"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"v1.0 发布(描述)"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"推送标签到远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推送标签到远程仓库"}},[a._v("#")]),a._v(" 推送标签到远程仓库")]),a._v(" "),t("p",[a._v("首先要保证本地创建好了标签才可以推送标签到远程仓库：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("local-version-number"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("一次性推送所有标签，同步到远程仓库：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git push origin --tags\n")])])]),t("h2",{attrs:{id:"删除本地标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除本地标签"}},[a._v("#")]),a._v(" 删除本地标签")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -d "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"删除远程标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除远程标签"}},[a._v("#")]),a._v(" 删除远程标签")]),a._v(" "),t("p",[a._v("删除远程标签需要"),t("strong",[a._v("先删除本地标签")]),a._v("，再执行下面的命令：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin :refs/tags/"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"切回到某个标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切回到某个标签"}},[a._v("#")]),a._v(" 切回到某个标签")]),a._v(" "),t("p",[a._v("一般上线之前都会打tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b branch_name tag_name\n")])])]),t("h2",{attrs:{id:"放弃工作区的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#放弃工作区的修改"}},[a._v("#")]),a._v(" 放弃工作区的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("放弃所有修改：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("h2",{attrs:{id:"恢复删除的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#恢复删除的文件"}},[a._v("#")]),a._v(" 恢复删除的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rev-list -n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" HEAD -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#得到 deleting_commit")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("deleting_commit"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("^ -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回到删除文件 deleting_commit 之前的状态")]),a._v("\n")])])]),t("h2",{attrs:{id:"以新增一个commit的方式还原某一个commit的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以新增一个commit的方式还原某一个commit的修改"}},[a._v("#")]),a._v(" 以新增一个commit的方式还原某一个commit的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" revert "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"回到某个commit的状态-并删除后面的commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到某个commit的状态-并删除后面的commit"}},[a._v("#")]),a._v(" 回到某个commit的状态，并删除后面的commit")]),a._v(" "),t("p",[a._v("和revert的区别：reset命令会抹去某个commit id之后的所有commit")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#默认就是-mixed参数。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –mixed HEAD^  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –soft HEAD~3  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –hard "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容")]),a._v("\n")])])]),t("h2",{attrs:{id:"修改上一个commit的描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改上一个commit的描述"}},[a._v("#")]),a._v(" 修改上一个commit的描述")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend\n")])])]),t("h2",{attrs:{id:"查看commit历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看commit历史"}},[a._v("#")]),a._v(" 查看commit历史")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log\n")])])]),t("h2",{attrs:{id:"查看某段代码是谁写的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看某段代码是谁写的"}},[a._v("#")]),a._v(" 查看某段代码是谁写的")]),a._v(" "),t("p",[a._v("blame的意思为‘责怪’，你懂的。")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" blame "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"显示本地更新过head的git命令记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#显示本地更新过head的git命令记录"}},[a._v("#")]),a._v(" 显示本地更新过HEAD的git命令记录")]),a._v(" "),t("p",[a._v("每次更新了HEAD 的git 命令比如 commint、amend、cherry-pick、reset、revert等都会被记录下来（不限分支），就像shell的history一样。\n这样你可以reset 到任何一次更新了HEAD 的操作之后，而不仅仅是回到当前分支下的某个commit 之后的状态。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git reflog\n")])])]),t("h2",{attrs:{id:"修改作者名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改作者名"}},[a._v("#")]),a._v(" 修改作者名")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend --author"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Author Name <email@address.com>'")]),a._v("\n")])])]),t("h2",{attrs:{id:"修改远程仓库的url"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库的url"}},[a._v("#")]),a._v(" 修改远程仓库的url")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("URL"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"增加远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加远程仓库"}},[a._v("#")]),a._v(" 增加远程仓库")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"列出所有远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程仓库"}},[a._v("#")]),a._v(" 列出所有远程仓库")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote\n")])])]),t("h2",{attrs:{id:"查看两个星期内的改动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看两个星期内的改动"}},[a._v("#")]),a._v(" 查看两个星期内的改动")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" whatchanged --since"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2 weeks ago'")]),a._v("\n")])])]),t("h2",{attrs:{id:"把a分支的某一个commit-放到b分支上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把a分支的某一个commit-放到b分支上"}},[a._v("#")]),a._v(" 把A分支的某一个commit，放到B分支上")]),a._v(" "),t("p",[a._v("这个过程需要"),t("code",[a._v("cherry-pick")]),a._v("命令，"),t("a",{attrs:{href:"http://sg552.iteye.com/blog/1300713#bc2367928",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cherry-pick "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"给git命令起别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给git命令起别名"}},[a._v("#")]),a._v(" 给git命令起别名")]),a._v(" "),t("p",[a._v("简化命令")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias."),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("handle"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n比如：git status 改成 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" st，这样可以简化命令\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.st status\n")])])]),t("h2",{attrs:{id:"存储当前的修改-但不用提交commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储当前的修改-但不用提交commit"}},[a._v("#")]),a._v(" 存储当前的修改，但不用提交commit")]),a._v(" "),t("p",[a._v("详解可以参考"),t("a",{attrs:{href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000",target:"_blank",rel:"noopener noreferrer"}},[a._v("廖雪峰老师的git教程"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash\n")])])]),t("h2",{attrs:{id:"保存当前状态-包括untracked的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#保存当前状态-包括untracked的文件"}},[a._v("#")]),a._v(" 保存当前状态，包括untracked的文件")]),a._v(" "),t("p",[a._v("untracked文件：新建的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash -u\n")])])]),t("h2",{attrs:{id:"展示所有stashes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有stashes"}},[a._v("#")]),a._v(" 展示所有stashes")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash list\n")])])]),t("h2",{attrs:{id:"回到某个stash的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到某个stash的状态"}},[a._v("#")]),a._v(" 回到某个stash的状态")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash apply "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"回到最后一个stash的状态-并删除这个stash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回到最后一个stash的状态-并删除这个stash"}},[a._v("#")]),a._v(" 回到最后一个stash的状态，并删除这个stash")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop\n")])])]),t("h2",{attrs:{id:"删除所有的stash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除所有的stash"}},[a._v("#")]),a._v(" 删除所有的stash")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("clear")]),a._v("\n")])])]),t("h2",{attrs:{id:"从stash中拿出某个文件的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从stash中拿出某个文件的修改"}},[a._v("#")]),a._v(" 从stash中拿出某个文件的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("stash@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示所有tracked的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有tracked的文件"}},[a._v("#")]),a._v(" 展示所有tracked的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files -t\n")])])]),t("h2",{attrs:{id:"展示所有untracked的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有untracked的文件"}},[a._v("#")]),a._v(" 展示所有untracked的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files --others\n")])])]),t("h2",{attrs:{id:"展示所有忽略的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有忽略的文件"}},[a._v("#")]),a._v(" 展示所有忽略的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files --others -i --exclude-standard\n")])])]),t("h2",{attrs:{id:"强制删除untracked的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制删除untracked的文件"}},[a._v("#")]),a._v(" 强制删除untracked的文件")]),a._v(" "),t("p",[a._v("可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的untracked文件。"),t("code",[a._v("clean")]),a._v("命令，"),t("strong",[a._v("注意两点")]),a._v("：")]),a._v(" "),t("ol",[t("li",[a._v("clean后，删除的文件无法找回")]),a._v(" "),t("li",[a._v("不会影响tracked的文件的改动，只会删除untracked的文件")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -f\n")])])]),t("h2",{attrs:{id:"强制删除untracked的目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制删除untracked的目录"}},[a._v("#")]),a._v(" 强制删除untracked的目录")]),a._v(" "),t("p",[a._v("可以用来删除新建的目录，"),t("strong",[a._v("注意")]),a._v(":这个命令也可以用来删除untracked的文件。详情见上一条")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("directory-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -df\n")])])]),t("h2",{attrs:{id:"展示简化的commit历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示简化的commit历史"}},[a._v("#")]),a._v(" 展示简化的commit历史")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("oneline --graph --decorate --all\n")])])]),t("h2",{attrs:{id:"把某一个分支到导出成一个文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把某一个分支到导出成一个文件"}},[a._v("#")]),a._v(" 把某一个分支到导出成一个文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" bundle create "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"从包中导入分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从包中导入分支"}},[a._v("#")]),a._v(" 从包中导入分支")]),a._v(" "),t("p",[a._v("新建一个分支，分支内容就是上面"),t("code",[a._v("git bundle create")]),a._v("命令导出的内容")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone repo.bundle "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("repo-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"执行rebase之前自动stash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行rebase之前自动stash"}},[a._v("#")]),a._v(" 执行rebase之前自动stash")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase --autostash\n")])])]),t("h2",{attrs:{id:"从远程仓库根据id-拉下某一状态-到本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从远程仓库根据id-拉下某一状态-到本地分支"}},[a._v("#")]),a._v(" 从远程仓库根据ID，拉下某一状态，到本地分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch origin pull/"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/head:"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"详细展示一行中的修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#详细展示一行中的修改"}},[a._v("#")]),a._v(" 详细展示一行中的修改")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --word-diff\n")])])]),t("h2",{attrs:{id:"清除gitignore文件中记录的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除gitignore文件中记录的文件"}},[a._v("#")]),a._v(" 清除gitignore文件中记录的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean -X -f\n")])])]),t("h2",{attrs:{id:"展示所有alias和configs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示所有alias和configs"}},[a._v("#")]),a._v(" 展示所有alias和configs")]),a._v(" "),t("p",[t("strong",[a._v("注意：")]),a._v(" config分为：当前目录（local）和全局（golbal）的config，默认为当前目录的config")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --local --list "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("当前目录"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global --list "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("全局"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示忽略的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示忽略的文件"}},[a._v("#")]),a._v(" 展示忽略的文件")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status --ignored\n")])])]),t("h2",{attrs:{id:"commit历史中显示branch1有的-但是branch2没有commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit历史中显示branch1有的-但是branch2没有commit"}},[a._v("#")]),a._v(" commit历史中显示Branch1有的，但是Branch2没有commit")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log Branch1 ^Branch2\n")])])]),t("h2",{attrs:{id:"在commit-log中显示gpg签名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在commit-log中显示gpg签名"}},[a._v("#")]),a._v(" 在commit log中显示GPG签名")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --show-signature\n")])])]),t("h2",{attrs:{id:"删除全局设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除全局设置"}},[a._v("#")]),a._v(" 删除全局设置")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global --unset "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("entry-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"新建并切换到新分支上-同时这个分支没有任何commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建并切换到新分支上-同时这个分支没有任何commit"}},[a._v("#")]),a._v(" 新建并切换到新分支上，同时这个分支没有任何commit")]),a._v(" "),t("p",[a._v("相当于保存修改，但是重写commit历史")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout --orphan "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"展示任意分支某一文件的内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展示任意分支某一文件的内容"}},[a._v("#")]),a._v(" 展示任意分支某一文件的内容")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" show "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"clone下来指定的单一分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clone下来指定的单一分支"}},[a._v("#")]),a._v(" clone下来指定的单一分支")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone -b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" --single-branch https://github.com/user/repo.git\n")])])]),t("h2",{attrs:{id:"忽略某个文件的改动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略某个文件的改动"}},[a._v("#")]),a._v(" 忽略某个文件的改动")]),a._v(" "),t("p",[a._v("关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git update-index --assume-unchanged path/to/file\n")])])]),t("p",[a._v("恢复 track 指定文件的改动")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git update-index --no-assume-unchanged path/to/file\n")])])]),t("h2",{attrs:{id:"忽略文件的权限变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件的权限变化"}},[a._v("#")]),a._v(" 忽略文件的权限变化")]),a._v(" "),t("p",[a._v("不再将文件的权限变化视作改动")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config core.fileMode "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n")])])]),t("h2",{attrs:{id:"以最后提交的顺序列出所有git分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以最后提交的顺序列出所有git分支"}},[a._v("#")]),a._v(" 以最后提交的顺序列出所有Git分支")]),a._v(" "),t("p",[a._v("最新的放在最上面")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" for-each-ref --sort"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-committerdate --format"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%(refname:short)'")]),a._v(" refs/heads/\n")])])]),t("h2",{attrs:{id:"在commit-log中查找相关内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在commit-log中查找相关内容"}},[a._v("#")]),a._v(" 在commit log中查找相关内容")]),a._v(" "),t("p",[a._v("通过grep查找，given-text：所需要查找的字段")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --all --grep"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<given-text>'")]),a._v("\n")])])]),t("h2",{attrs:{id:"把暂存区的指定file放到工作区中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把暂存区的指定file放到工作区中"}},[a._v("#")]),a._v(" 把暂存区的指定file放到工作区中")]),a._v(" "),t("p",[a._v("不添加参数，默认是-mixed")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h2",{attrs:{id:"强制推送"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强制推送"}},[a._v("#")]),a._v(" 强制推送")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);